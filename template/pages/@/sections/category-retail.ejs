<%
const search = new _.EcomSearch()
search
  .setCategoryNames([_.state.name])
  .setSortOrder(opt.sort)
let items
try {
  await search.fetch()
  items = search.getItems()
} catch (err) {
  if (err.response && err.response.status === 404) {
    console.error(err)
  } else {
    throw err
  }
}
const categoryNames = [_.state.name]
let productOrder
const categoryOrder = _.cms(`category_list/${_.state.slug}`)
if (categoryOrder && categoryOrder.list && categoryOrder.list.length) {
    productOrder =  categoryOrder.list.map(({ product_id }) => product_id)
}

if (items && !items.length) {
  const childCategories = _.categories.filter(({ parent }) => {
    return parent && parent._id === _.state._id
  })
  if (childCategories.length) {
    childCategories.forEach(({ name }) => {
      categoryNames.push(name)
    })
    search
      .setCategoryNames(categoryNames)
      .setSortOrder(opt.sort)
    await search.fetch()
    items = await search.getItems()
    
  }
}

const model = _.state.name.replace('Capas para ', '').replace('New! ', '').replace(' (todos modelos)', '')
const itemQuantity = items.filter(item => {
  if (Array.isArray(item.variations) && item.variations.length) {
    return item.variations.some(variation => {
      return variation.specifications['modelo'] &&
        variation.specifications['modelo'][0] &&
        variation.specifications['modelo'][0].text === model &&
        variation.quantity > 0
    })
  }
  return item
})
const diff = items.filter(({ _id: id1 }) => !itemQuantity.some(({ _id: id2 }) => id2 === id1))

items = [...itemQuantity, ...diff]
if (productOrder && productOrder.length) {
  items.sort((a, b) => {
    const modelNameA = productOrder.find(id => b._id === id) || '';
    const modelNameB = productOrder.find(id => a._id === id) || '';

    const indexA = productOrder.findIndex(id => id === modelNameA);
    const indexB = productOrder.findIndex(id => id === modelNameB);

    if (modelNameA === '' && modelNameB === '') {
      return 1; 
    } else if (modelNameA === '' && modelNameB !== '') {
      return -1
    } else if (modelNameA !== '' && modelNameB === '') {
      return 1
    }

    return indexB - indexA;
  });
}

%>

<div class="category-retail">
  <%- await include('@/sections/inc/retail-grid', {
    _, opt: {
      items,
      search,
      category_names: categoryNames,
      sort: opt.sort
    }
  }) %>
</div>
